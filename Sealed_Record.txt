> Sealed class/interface é possível especificar quais classes/interfaces extenderão ou implementarão ela
	> 'sealed' (class/interface) Shape 'permits' Circle
	> (final/non-sealed/sealed) class (implements/extends) Shape
> Classes que extendem ou implementam precisam ser 'final', 'non-sealed' ou 'sealed'

---

> Record classes declara a sequencia dos campos (atributos) e os 'getters', além de equals, hashCode e toString. Os atributos são 'final' porque a classe tem a intenção de ser um simples 'carregador de dados'.
> Por ter atributos final, não tem 'setter'.
	> record Rectangle(double length, double width) {}
> Pode implementer construtor
> Não pode declarar campos não estáticos, instancias de variaveis
> Pode declarar métodos
> Pode criar um record generico
	> record Triangle<C extends Coordinate> (C top, C left, C right) {}
> Pode implementar interfaces
> Permite anotações nos atributos
> Pode usar record classes no 'permits' de uma classe 'sealed'